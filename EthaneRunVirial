#!/bin/bash

Compound=some_compound
Model=some_model
#Compound=Ethane
Model=TraPPEfs

iSigma=some_iSigma
iEps=some_iEps
#jretemp iSigma=0
#jretemp iEps=0
#Note: The eps and sigma values are stored in the gro file created at the iEps,iSigma level, so we just need to know iEps,iSigma.

input_path=some_input_path
output_path=some_output_path

N=400

supercritical_box=(9.7682 8.8750 7.7530 6.1536) #boxLens(nm) such that V(nm3) = {4,3,2}*V(rhoLo)

nCores=(1 1 1)

Temp=(360 259)

echo e"$iEps"s"$iSigma"
sleep 2s

iTempStart=0
iTempEnd=1

j_start=0
j_end=2   #we only simulate 3 densities for Virial. Isotherm can use rhoLo for 4th.

####

# Initialize the folders

cd "$output_path"/e"$iEps"s"$iSigma"  || exit

echo "NMol" "Length (nm)" "Temp (K)" > VirialSettings.txt

mkdir Virial
cd Virial || exit

for iTemp in $(seq $iTempStart $iTempEnd)

do

for j in $(seq $j_start $j_end)

do

cd "$output_path"/e"$iEps"s"$iSigma"/Virial/ || exit

echo "$N" "${supercritical_box[j]}" "${Temp[iTemp]}" >> ../VirialSettings.txt

mkdir rho_"$j"

cd rho_"$j" || exit

gmx insert-molecules -ci ../../ethane.gro -nmol $N -box "${supercritical_box[j]}" "${supercritical_box[j]}" "${supercritical_box[j]}" -o ethane_box.gro

#Copy the minimization files

cp "$input_path"/em_steep.mdp em_steep.mdp
cp "$input_path"/em_l-bfgs.mdp em_l-bfgs.mdp

mkdir NVT_eq
cd NVT_eq || exit

mkdir T"$iTemp"
cd    T"$iTemp" || exit
# Copy the equilibration files and edit the temperature

cp "$input_path"/nvt_eq_force_switch.mdp nvt_eq.mdp
sed -i -e s/some_temperature/"${Temp[iTemp]}"/ nvt_eq.mdp

mkdir NVT_prod
cd NVT_prod || exit

# Copy the production files and edit the temperature

cp "$input_path"/nvt_prod_force_switch.mdp nvt_prod.mdp
sed -i -e s/some_temperature/"${Temp[iTemp]}"/ nvt_prod.mdp

done #copied files for each temperature.

done #created all dirs and temperature files.

#######

# Energy minimization

# First run the em_steep

for j in $(seq $j_start $j_end)

do

cd "$output_path"/e"$iEps"s"$iSigma"/Virial/rho_"$j" || exit

gmx grompp -f em_steep.mdp -c ethane_box.gro -p ../../ethane.top -o em_steep.tpr
gmx mdrun -nt 1 -deffnm em_steep &

done

# Wait a while to make sure em_steep are done (with more temperatures in the first loop this is not necessary)

echo "Waiting for em_steep.tpr: Energy Minimization Part1"

sleep 10s

# Second run the em_l-bfgs

for j in $(seq $j_start $j_end)

do

cd "$output_path"/e"$iEps"s"$iSigma"/Virial/rho_"$j" || exit

gmx grompp -f em_l-bfgs.mdp -c em_steep.gro -p ../../ethane.top -o em_l_bfgs.tpr -maxwarn 1
gmx mdrun -nt 1 -deffnm em_l_bfgs &

done

#####

echo "Waiting for em_l_bfgs.tpr: Energy Minimization Part2"

sleep 10s

# Equilibration period

for iTemp in $(seq $iTempStart $iTempEnd)

do

for j in $(seq $j_start $j_end)

do

cd "$output_path"/e"$iEps"s"$iSigma"/Virial/rho_"$j"/NVT_eq/T"$iTemp" || exit

gmx grompp -f nvt_eq.mdp -c ../../em_l_bfgs.gro -p ../../../../ethane.top -o nvt_eq.tpr
gmx mdrun -nt "${nCores[j]}" -deffnm nvt_eq &

done #iTemp=0 1

done #rho=rho_0,rho_1,rho_2

sleep 2m # At 360 K and isochore_0 it takes about 2 m with a single thread
echo "Waiting for NVT_eq: Energy equilibration"


# Production period for liquid phase

for iTemp in $(seq $iTempStart $iTempEnd)

do

for j in $(seq $j_start $j_end)

do

cd "$output_path"/e"$iEps"s"$iSigma"/Virial/rho_"$j"/NVT_eq/T"$iTemp"/NVT_prod || exit

# Could give more resources to denser phase

gmx grompp -f nvt_prod.mdp -c ../nvt_eq.gro -p ../../../../../ethane.top -o nvt_prod.tpr
gmx mdrun -nt "${nCores[j]}" -deffnm nvt_prod & #Can use more cores in liquid phase since vapor phase will have already finished

done #iTemp=0 1

done #rho=rho_0,rho_1,rho_2

exit 0
