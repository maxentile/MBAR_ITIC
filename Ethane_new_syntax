#!/bin/bash

Compound=Ethane
Model=TraPPEAUAfs

#Specify the path location, note do not include a space at the end of the line

scripts_path=~/Elliott
input_path=~/"$Compound"/Gromacs/Force_switch
output_path=~/"$Compound"/Gromacs/"$Model"

#MolWt=30.0698

opt_method='leapfrog'
opt_prop1='rhoL'
opt_prop2='Psat'

#eps_low=0.85 #Rely on optimization algorithm to determine feasible bounds
#eps_high=1.

#sig_low=0.371
#sig_high=0.379

TOL_eps=0.001
TOL_sig=0.0001
TOL_MBAR=0.001

iRef=0

eps_guess=1.12 #[kJ/mol]
sig_guess=0.352 #[nm]

bond_length=0.230 #[nm]

conv_eps=0

while [ "$conv_eps" -lt 1 ] #Checks to see if the loop has converged for epsilon
do

cd "$output_path" || exit

if [ $iRef -ge 0 ] #If you have already run (i.e. just rerunning the optimization)
then

#### Start the mdrun simulations for the initial epsilon and sigma values

echo Run ITIC for Epsilon = "$eps_guess" sigma = "$sig_guess"
sleep 2s

####

mkdir ref"$iRef"
cd ref"$iRef" || exit

#Create files with force field parameters

echo "$eps_guess" "$sig_guess" > eps_Sigma
echo "$eps_guess" > eps_guess
echo "$bond_length" > bond_length

cp "$input_path"/ethane_temp.top ethane.top 
cp "$input_path"/ethane.gro ethane.gro 
sed -i -e s/some_epsilon/"$eps_guess"/ ethane.top
sed -i -e s/some_sigma/"$sig_guess"/ ethane.top
sed -i -e s/some_bond/"$bond_length"/ ethane.top

cp "$scripts_path"/EthaneRunITIC_all_new_syntax EthaneRunITIC_all

sed -i -e s/some_compound_top/"${Compound}"/ EthaneRunITIC_all
sed -i -e s/some_model_top/"${Model}"/ EthaneRunITIC_all
sed -i -e s/some_iRef_top/"${iRef}"/ EthaneRunITIC_all
sed -i -e s@some_scripts_path_top@"$scripts_path"@ EthaneRunITIC_all
sed -i -e s@some_input_path_top@"$input_path"@ EthaneRunITIC_all
sed -i -e s@some_output_path_top@"$output_path"@ EthaneRunITIC_all

#./EthaneRunITIC_all


fi

cd "$output_path"/ref"$iRef" || exit # Must be in correct directory for python script and file generation

echo "Eps (kJ/mol)" > eps_all
echo "Objective" > F_all
echo "Objective" > F_ITIC_all
cp F_ITIC_all SSE_rhoL_all
cp F_ITIC_all SSE_rhov_all
cp F_ITIC_all SSE_Psat_all
cp F_ITIC_all SSE_U_all
cp F_ITIC_all SSE_P_all
cp F_ITIC_all SSE_Z_all
echo $TOL_eps > TOL_eps
echo $TOL_sig > TOL_sig
echo $TOL_MBAR > TOL_MBAR 

#echo "$eps_low" > eps_low
#echo "$eps_high" > eps_high
echo "$eps_guess" > eps_guess

echo "Sigma (nm)" > sig_all
echo "$sig_guess" > sig_guess
#echo "$sig_low" > sig_low
#echo "$sig_high" > sig_high

echo "$iRef" > iRef #Testing out to see if I can copy the reference inside this directory instead

cp "$scripts_path"/EthaneRerunITIC_subprocess_new_syntax EthaneRerunITIC_subprocess

sed -i -e s/some_compound_top/"${Compound}"/ EthaneRerunITIC_subprocess
sed -i -e s/some_model_top/"${Model}"/ EthaneRerunITIC_subprocess
sed -i -e s/some_iRef_top/"${iRef}"/ EthaneRerunITIC_subprocess
sed -i -e s@some_scripts_path_top@"$scripts_path"@ EthaneRerunITIC_subprocess
sed -i -e s@some_input_path_top@"$input_path"@ EthaneRerunITIC_subprocess
sed -i -e s@some_output_path_top@"$output_path"@ EthaneRerunITIC_subprocess

cd "$output_path"/ref"$iRef" || exit #Must cd back to original location for python script

python "$scripts_path"/optimization_multidimensional_ITIC.py -opt "$opt_method" -prop "$opt_prop1" "$opt_prop2"
#python "$scripts_path"/parameter_space_SSE_analysis.py -opt "$opt_method"

cd "$output_path"/ref"$iRef" || exit #Should still be in the same directory, but just to be safe

rm Isochore/rho?/T?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg Isochore/rho?/T?/NVT_eq/nvt_eq.trr Isochore/rho?/T?/NVT_eq/NVT_prod/nvt_prod.log
rm Isotherm/rho_?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg Isotherm/rho_?/NVT_eq/nvt_eq.trr Isotherm/rho_?/NVT_eq/NVT_prod/nvt_prod.log #Do not delete the production trajectory files since they will be used in subsequent iterations

eps_optimal=$(<eps_optimal)
sig_optimal=$(<sig_optimal)
iRef=$((iRef + 1))
conv_eps=$(<conv_eps)
#conv_eps=1 #If you just want to do a single iteration, for practice

eps_guess=$eps_optimal
sig_guess=$sig_optimal

echo "$eps_guess"
echo "$sig_guess"
echo "$conv_eps"

done #for while loop of direct simulations

exit 0

#######

